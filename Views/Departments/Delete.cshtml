@model EmployeeManagementMVC.Models.Department

@{
    ViewData["Title"] = "Delete Department";
}

<h1>Delete Department</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Department</h4>
    <hr />
     @if (ViewData.ModelState[""]?.Errors.Any() == true)
    {
        <div class="alert alert-danger">
            @Html.ValidationSummary(false)
        </div>
    }
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>

    @if (Model.Employees != null && Model.Employees.Any())
    {
        <div class="alert alert-warning">
            <h4>Employees in this Department:</h4>
            <ul>
                @foreach (var employee in Model.Employees)
                {
                    <li>@employee.FirstName @employee.LastName</li>
                }
            </ul>
             <p>You cannot delete this department because it has associated employees.</p>
        </div>
        <form asp-action="Delete">
             <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </form>
    }
    else
    {
         <form asp-action="Delete" method="post">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Delete" class="btn btn-danger" /> |
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </form>
    }
</div>
